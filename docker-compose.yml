services:
  #! Telemetry
  otel-agent:
    image: otel/opentelemetry-collector-contrib:0.122.1
    ports: [ 4317:4317 ]
    environment:
      - HONEYCOMB_DATASET=${HONEYCOMB_DATASET}
      - HONEYCOMB_API_KEY=${HONEYCOMB_API_KEY}
    command: --config=/etc/otel-agent-config.yaml
    volumes: [ "./dev/otel-agent-config.yaml:/etc/otel-agent-config.yaml" ]

  #! Auth Services (ORY Stack)
  kratos-admin:
    image: oryd/kratos:v1.3.1
    ports: [ 4433:4433, 4434:4434 ]
    entrypoint: sh -c
    command: '"kratos migrate sql up -y -e && kratos serve -c /home/ory/admin/kratos.yml --watch-courier --sqa-opt-out"'
    environment:
      DSN: postgres://dbuser:secret@kratos-admin-pg:5432/default?sslmode=disable
    volumes: [ "./dev/ory:/home/ory" ]
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:4434/admin/health/ready"]
      interval: 1s
      timeout: 1s
      retries: 60

  kratos-customer:
    image: oryd/kratos:v1.3.1
    ports: [ 4435:4433, 4436:4434 ]
    entrypoint: sh -c
    command: '"kratos migrate sql up -y -e && kratos serve -c /home/ory/customer/kratos.yml --watch-courier --sqa-opt-out"'
    environment:
      DSN: postgres://dbuser:secret@kratos-customer-pg:5432/default?sslmode=disable
    volumes: [ "./dev/ory:/home/ory" ]
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:4434/admin/health/ready"]
      interval: 1s
      timeout: 1s
      retries: 60

  oathkeeper:
    image: oryd/oathkeeper:v0.40.7-distroless
    ports: [ 4455:4455, 4456:4456 ]
    command: serve -c /home/ory/oathkeeper.yml --sqa-opt-out
    volumes: [ "./dev/ory:/home/ory" ]
    depends_on: [ kratos-admin, kratos-customer, otel-agent ]

  mailhog:
    image: mailhog/mailhog:latest
    ports: [ 1025:1025, 8025:8025 ]

  #! Databases
  core-pg:
    image: postgres:16.4
    ports: [ 5433:5432 ]
    environment: [ POSTGRES_USER=user, POSTGRES_PASSWORD=password, POSTGRES_DB=pg ]
    healthcheck: { test: ["CMD-SHELL", "pg_isready"], interval: 1s, timeout: 1s, retries: 20 }

  kratos-admin-pg:
    image: postgres:16.4
    ports: [ 5434:5432 ]
    environment: [ POSTGRES_USER=dbuser, POSTGRES_PASSWORD=secret, POSTGRES_DB=default ]

  kratos-customer-pg:
    image: postgres:16.4
    ports: [ 5435:5432 ]
    environment: [ POSTGRES_USER=dbuser, POSTGRES_PASSWORD=secret, POSTGRES_DB=default ]

  #! Reporting
  meltano:
    image: us.gcr.io/galoyorg/meltano
    volumes: [ ./meltano:/lana ]
    working_dir: /lana
    environment:
      - TARGET_BIGQUERY_CREDENTIALS_JSON=${TARGET_BIGQUERY_CREDENTIALS_JSON}
      - TARGET_BIGQUERY_DATASET=${TARGET_BIGQUERY_DATASET}
      - TARGET_BIGQUERY_LOCATION=${TARGET_BIGQUERY_LOCATION}
      - DBT_BIGQUERY_DATASET=${DBT_BIGQUERY_DATASET}
      - DBT_BIGQUERY_KEYFILE=${DBT_BIGQUERY_KEYFILE}
      - TAP_SUMSUBAPI_KEY=${SUMSUB_KEY}
      - TAP_SUMSUBAPI_SECRET=${SUMSUB_SECRET}

  #! All
  integration-deps:
    image: busybox
    command: sh -c "while :; do sleep 10; done"
    depends_on:
      - core-pg
      - otel-agent
      - kratos-admin
      - kratos-admin-pg
      - kratos-customer
      - kratos-customer-pg
      - oathkeeper
      - mailhog
