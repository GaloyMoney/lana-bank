services:
  #! Telemetry
  otel-agent:
    image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.126.0
    ports: [ 4317:4317 ]
    environment:
      - HONEYCOMB_DATASET=${HONEYCOMB_DATASET}
      - HONEYCOMB_API_KEY=${HONEYCOMB_API_KEY}
    command: --config=/etc/otel-agent-config.yaml
    volumes: [ "./dev/otel-agent-config.yaml:/etc/otel-agent-config.yaml" ]

  #! Auth Services (ORY Stack)
  kratos-admin:
    image: oryd/kratos:v1.3.1
    ports: [ 4433:4433, 4434:4434 ]
    entrypoint: sh -c
    command: '"kratos migrate sql up -y -e && kratos serve -c /home/ory/admin/kratos.yml --watch-courier --sqa-opt-out --dev"'
    environment:
      DSN: postgres://dbuser:secret@kratos-admin-pg:5432/default?sslmode=disable
    volumes: [ "./dev/ory:/home/ory" ]
    depends_on: [ kratos-admin-pg ]

  kratos-customer:
    image: oryd/kratos:v1.3.1
    ports: [ 4435:4433, 4436:4434 ]
    entrypoint: sh -c
    command: '"kratos migrate sql up -y -e && kratos serve -c /home/ory/customer/kratos.yml --watch-courier --sqa-opt-out --dev"'
    environment:
      DSN: postgres://dbuser:secret@kratos-customer-pg:5432/default?sslmode=disable
    volumes: [ "./dev/ory:/home/ory" ]
    depends_on: [ kratos-customer-pg ]

  oathkeeper:
    image: oryd/oathkeeper:v0.40.7-distroless
    ports: [ 4455:4455, 4456:4456 ]
    command: serve -c /home/ory/oathkeeper.yml --sqa-opt-out
    volumes: [ "./dev/ory:/home/ory" ]
    depends_on: [ kratos-admin, kratos-customer, otel-agent ]

  mailcrab:
    image: marlonb/mailcrab:latest
    ports: [ 1025:1025, 1080:1080 ]

  airflow-scheduler:
    image: us.gcr.io/galoyorg/meltano:edge
    # image: meltano:latest # nix build .#meltano-image && docker load < result
    command: meltano invoke airflow scheduler
    volumes:
      - "meltano-metadata:/workspace/meltano/.meltano:rw"
      - "./meltano/keyfile.json:/workspace/meltano/keyfile.json:ro"
      - "./meltano/meltano.yml:/workspace/meltano/meltano.yml"
      - "./meltano/extract:/workspace/meltano/extract"
      - "./meltano/orchestrate:/workspace/meltano/orchestrate"
      - "./meltano/plugins:/workspace/meltano/plugins"
      - "./meltano/transform:/workspace/meltano/transform"
      - "./meltano/utilities:/workspace/meltano/utilities"
    healthcheck:
      test: ["CMD", "airflow-scheduler-healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    depends_on: { airflow-pg: { condition: service_healthy } }
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://user:password@airflow-pg:5432/pg

  airflow-webserver:
    image: us.gcr.io/galoyorg/meltano:edge
    # image: meltano:latest # nix build .#meltano-image && docker load < result
    command: meltano invoke airflow webserver
    ports: [8080:8080]
    volumes:
      - "meltano-metadata:/workspace/meltano/.meltano:rw"
      - "./meltano/keyfile.json:/workspace/meltano/keyfile.json:ro"
      - "./meltano/meltano.yml:/workspace/meltano/meltano.yml"
      - "./meltano/extract:/workspace/meltano/extract"
      - "./meltano/orchestrate:/workspace/meltano/orchestrate"
      - "./meltano/plugins:/workspace/meltano/plugins"
      - "./meltano/transform:/workspace/meltano/transform"
      - "./meltano/utilities:/workspace/meltano/utilities"
    depends_on: 
      airflow-pg: { condition: service_healthy }
      airflow-scheduler: { condition: service_healthy }
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://user:password@airflow-pg:5432/pg

  #! Databases
  core-pg:
    image: ghcr.io/cloudnative-pg/postgresql:17.5
    ports: [ 5433:5432 ]
    environment: [ POSTGRES_USER=user, POSTGRES_PASSWORD=password, POSTGRES_DB=pg ]

  kratos-admin-pg:
    image: ghcr.io/cloudnative-pg/postgresql:17.5
    ports: [ 5434:5432 ]
    environment: [ POSTGRES_USER=dbuser, POSTGRES_PASSWORD=secret, POSTGRES_DB=default ]

  kratos-customer-pg:
    image: ghcr.io/cloudnative-pg/postgresql:17.5
    ports: [ 5435:5432 ]
    environment: [ POSTGRES_USER=dbuser, POSTGRES_PASSWORD=secret, POSTGRES_DB=default ]

  airflow-pg:
    image: ghcr.io/cloudnative-pg/postgresql:17.5
    ports: [5436:5432]
    environment:
      [POSTGRES_USER=user, POSTGRES_PASSWORD=password, POSTGRES_DB=pg]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d pg"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  meltano-metadata: {} # Meltano shared caching layer
