config {
    type: "table",
    description: "Each row represents a unique event/fact of the collateralization [payment_recorded] of the credit facility.",
    assertions: {
        uniqueKey: ["event_key"],
        nonNull: [
            "recorded_at_date_key",
            "recorded_at",
            "event_type_key",
            "recorded_in_ledger_at_date_key",
            "recorded_in_ledger_at",
            "disbursement_amount",
            "interest_amount",
        ],
    },
}

WITH payment_recorded AS (

    SELECT
          event_key
        , CAST(FORMAT_DATE('%Y%m%d', recorded_at) as INT64) AS recorded_at_date_key
        , recorded_at
        , event_type_key
        , CAST(FORMAT_DATE('%Y%m%d', PARSE_TIMESTAMP('%Y-%m-%dT%H:%M:%E*SZ', JSON_VALUE(event, "$.recorded_in_ledger_at"), "UTC")) as INT64) AS recorded_in_ledger_at_date_key
        , PARSE_TIMESTAMP('%Y-%m-%dT%H:%M:%E*SZ', JSON_VALUE(event, "$.recorded_in_ledger_at"), "UTC") AS recorded_in_ledger_at
        , CAST(JSON_VALUE(event, "$.disbursement_amount") AS NUMERIC) AS disbursement_amount
        , CAST(JSON_VALUE(event, "$.interest_amount") AS NUMERIC) AS interest_amount
    FROM ${ref({name: "credit_facility_events", schema: envs.currentImportSchema})} AS cfe
    LEFT JOIN ${ref("dim_credit_facility_events_id")} AS t0 ON t0.event_id = cfe.id
    LEFT JOIN ${ref("dim_credit_facility_events_type")} AS t1 ON t1.event_type = cfe.event_type
    WHERE cfe.event_type = "payment_recorded"
    AND JSON_VALUE(event, "$.tx_id") IS NOT NULL

)


SELECT
      *
FROM payment_recorded
