config {
	type: "table",
	description: "Errors found in Regulatory Report persona.xml of norm NPB4-17"
}

SELECT *, "assert_nit_number nit_persona" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (CASE WHEN `tipo_identificador` = 'N' THEN ${ref('udf_nbp4_17_assert_nit_number')}(`nit_persona`) WHEN `tipo_identificador` = 'U' THEN ${ref('udf_nbp4_17_assert_niu_number')}(`nit_persona`) WHEN `tipo_identificador` = 'D' THEN ${ref('udf_nbp4_17_assert_dui_number')}(`nit_persona`) ELSE FALSE END)

UNION ALL

SELECT *, "assert_dui_number dui" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (CASE WHEN `tipo_persona` = '1' AND `nacionalidad` = 9300 AND `residente` = 'R' AND DATE_DIFF(CURRENT_DATE(), CAST(`fecha_nacimiento` AS DATE), YEAR) >= 18 THEN ${ref('udf_nbp4_17_assert_dui_number')}(`dui`) ELSE FALSE END)

UNION ALL

SELECT *, "assert_name primer_apellido" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (CASE WHEN `tipo_persona` = '1' THEN ${ref('udf_nbp4_17_assert_name')}(`primer_apellido`) ELSE FALSE END)

UNION ALL

SELECT *, "assert_nullable_name segundo_apellido" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (CASE WHEN `tipo_persona` = '1' THEN ${ref('udf_nbp4_17_assert_nullable_name')}(`segundo_apellido`) ELSE FALSE END)

UNION ALL

SELECT *, "assert_nullable_name apellido_casada" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (CASE WHEN `tipo_persona` = '1' THEN ${ref('udf_nbp4_17_assert_nullable_name')}(`apellido_casada`) ELSE FALSE END)

UNION ALL

SELECT *, "assert_name primer_nombre" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (CASE WHEN `tipo_persona` = '1' THEN ${ref('udf_nbp4_17_assert_name')}(`primer_nombre`) ELSE FALSE END)

UNION ALL

SELECT *, "assert_nullable_name segundo_nombre" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (CASE WHEN `tipo_persona` = '1' THEN ${ref('udf_nbp4_17_assert_nullable_name')}(`segundo_nombre`) ELSE FALSE END)

UNION ALL

SELECT *, "assert nombre_sociedad" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (CASE WHEN `tipo_persona` = '2' THEN REGEXP_CONTAINS(COALESCE(`nombre_sociedad`, '~'), '[^-,.\'& 0-9A-ZÑÁÉÍÓÚÜ]+') ELSE FALSE END)

UNION ALL

SELECT *, "assert_in_dim_table tipo_persona stg_dim_04_npb4_17_tipos_de_persona" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (${ref('udf_nbp4_17_assert_in_dim_table')}(`tipo_persona`, 'stg_dim_04_npb4_17_tipos_de_persona'))

UNION ALL

SELECT *, "assert_in_dim_table tipo_relacion stg_dim_05_npb4_17_tipos_de_deudores_relacionados" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (${ref('udf_nbp4_17_assert_in_dim_table')}(`tipo_relacion`, 'stg_dim_05_npb4_17_tipos_de_deudores_relacionados'))

UNION ALL

SELECT *, "assert_in_dim_table tipo_identificador stg_dim_06_npb4_17_tipos_de_identificador" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (${ref('udf_nbp4_17_assert_in_dim_table')}(`tipo_identificador`, 'stg_dim_06_npb4_17_tipos_de_identificador'))

UNION ALL

SELECT *, "assert_nit_number nit_desactualizado" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (CASE WHEN `tipo_persona` = '1' AND `nit_desactualizado` IS NOT NULL THEN ${ref('udf_nbp4_17_assert_nit_number')}(`nit_desactualizado`) ELSE FALSE END)

UNION ALL

SELECT *, "assert residente" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (CASE WHEN `tipo_persona` = '1' THEN COALESCE(`residente`, '~') NOT IN ('R', 'N') ELSE FALSE END)

UNION ALL

SELECT *, "assert_in_dim_table giro_persona stg_dim_19_npb4_17_actividades_economicas" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (${ref('udf_nbp4_17_assert_in_dim_table')}(`giro_persona`, 'stg_dim_19_npb4_17_actividades_economicas'))

UNION ALL

SELECT *, "assert_in_dim_table tamano_empresa stg_dim_20_npb4_17_tamano_de_empresa" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (CASE WHEN `tipo_persona` = '2' THEN ${ref('udf_nbp4_17_assert_in_dim_table')}(`tamano_empresa`, 'stg_dim_20_npb4_17_tamano_de_empresa') ELSE FALSE END)

UNION ALL

SELECT *, "assert tipo_empresa" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (CASE WHEN `tipo_persona` = '1' THEN `tipo_empresa` IS NOT NULL WHEN `tipo_persona` = '2' THEN COALESCE(`tipo_empresa`, '~') NOT IN ('N', 'E') ELSE FALSE END)

UNION ALL

SELECT *, "assert_dollar_number reserva" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (${ref('udf_nbp4_17_assert_dollar_number')}(CAST(`reserva` AS STRING), 13))

UNION ALL

SELECT *, "assert_in_dim_table categoria_riesgo stg_dim_03_npb4_17_tipos_de_categorias_de_riesgo" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (${ref('udf_nbp4_17_assert_in_dim_table')}(`categoria_riesgo`, 'stg_dim_03_npb4_17_tipos_de_categorias_de_riesgo'))

UNION ALL

SELECT *, "assert_niu_number numero_cliente" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (LENGTH(`numero_cliente`) > 17 OR ${ref('udf_nbp4_17_assert_niu_number')}(`numero_cliente`))

UNION ALL

SELECT *, "assert_niu_number id_alterno" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (LENGTH(`id_alterno`) > 17 OR ${ref('udf_nbp4_17_assert_niu_number')}(`id_alterno`))

UNION ALL

SELECT *, "assert_in_dim_table tipo_id_alterno stg_dim_27_npb4_17_identificador_alterno" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (${ref('udf_nbp4_17_assert_in_dim_table')}(`tipo_id_alterno`, 'stg_dim_27_npb4_17_identificador_alterno'))

UNION ALL

SELECT *, "assert_date fecha_nacimiento" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (${ref('udf_nbp4_17_assert_date')}(CAST(`fecha_nacimiento` AS STRING)))

UNION ALL

SELECT *, "assert_in_dim_table pais_residencia stg_dim_31_npb4_17_codigos_de_paises_o_territorios" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (${ref('udf_nbp4_17_assert_in_dim_table')}(CAST(`pais_residencia` AS STRING), 'stg_dim_31_npb4_17_codigos_de_paises_o_territorios'))

UNION ALL

SELECT *, "assert_dollar_number riesgo_consolidado" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (${ref('udf_nbp4_17_assert_dollar_number')}(CAST(`riesgo_consolidado` AS STRING), 13))

UNION ALL

SELECT *, "assert sexo_persona" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (COALESCE(`sexo_persona`, '~') NOT IN ('M', 'F'))

UNION ALL

SELECT *, "assert_in_dim_table ocupación stg_dim_25_npb4_17_lista_de_ocupaciones" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (${ref('udf_nbp4_17_assert_in_dim_table')}(`ocupación`, 'stg_dim_25_npb4_17_lista_de_ocupaciones'))

UNION ALL

SELECT *, "assert_tin_number id_pais_origen" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (${ref('udf_nbp4_17_assert_tin_number')}(`id_pais_origen`))

UNION ALL

SELECT *, "assert_in_dim_table nacionalidad stg_dim_31_npb4_17_codigos_de_paises_o_territorios" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (${ref('udf_nbp4_17_assert_in_dim_table')}(CAST(`nacionalidad` AS STRING), 'stg_dim_31_npb4_17_codigos_de_paises_o_territorios'))

UNION ALL

SELECT *, "assert_nullable_nit_number nit_anterior" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (${ref('udf_nbp4_17_assert_nullable_nit_number')}(`nit_anterior`))

UNION ALL

SELECT *, "assert_in_dim_table tipo_ident_anterior stg_dim_06_npb4_17_tipos_de_identificador" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (CASE WHEN `nit_anterior` IS NOT NULL THEN ${ref('udf_nbp4_17_assert_in_dim_table')}(`tipo_ident_anterior`, 'stg_dim_06_npb4_17_tipos_de_identificador') ELSE FALSE END)

UNION ALL

SELECT *, "assert_in_dim_table municipio_residencia stg_dim_14_npb4_17_municipios" AS error
FROM ${ref("stg_01_npb4_17_persona_xml_raw")}(CURRENT_TIMESTAMP())
WHERE (CASE WHEN `municipio_residencia` IS NOT NULL THEN ${ref('udf_nbp4_17_assert_in_dim_table')}(`municipio_residencia`, 'stg_dim_14_npb4_17_municipios') ELSE FALSE END)
