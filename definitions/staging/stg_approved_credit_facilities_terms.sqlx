config {
	type: "table",
}

WITH line_of_credit_terms AS (

	SELECT
		  JSON_VALUE(event, "$.customer_id") AS customer_id
		, id AS loc_id
		, recorded_at AS loc_recorded_at
		, event_type AS loc_event_type

		, CAST(JSON_VALUE(event, "$.facility") AS NUMERIC) AS loc_borrow_limit_in_cents
		, recorded_at AS loc_initialized_timestamp
		, CAST(JSON_VALUE(event, "$.terms.annual_rate") AS NUMERIC) AS loc_annual_interest_rate

		, 'actual/360' AS loc_day_count_convention	-- TODO get from proper source
		, 5.53 / 100.0 AS bench_mark_interest_rate	-- TODO get from proper source
		, CURRENT_TIMESTAMP() AS now_ts

		, CAST(JSON_VALUE(event, "$.terms.duration.value") AS INTEGER) AS loc_period_count
		, JSON_VALUE(event, "$.terms.duration.type") AS loc_period

		, CASE WHEN JSON_VALUE(event, "$.terms.duration.type") = 'months' THEN
			TIMESTAMP(TIMESTAMP_ADD(DATE(recorded_at), INTERVAL CAST(JSON_VALUE(event, "$.terms.duration.value") AS INT64) MONTH))
		--   ELSE
		-- 	TIMESTAMP_ADD(DATE(recorded_at), INTERVAL 1 YEAR)
		  END AS loc_end_date

		, JSON_VALUE(event, "$.terms.accrual_interval.type") AS loc_interest_accrual_interval
		, JSON_VALUE(event, "$.terms.incurrence_interval.type") AS loc_interest_incurrence_interval

		, JSON_VALUE(event, "$.terms.initial_cvl") AS loc_initial_cvl
		, JSON_VALUE(event, "$.terms.liquidation_cvl") AS loc_liquidation_cvl
		, JSON_VALUE(event, "$.terms.margin_call_cvl") AS loc_margin_call_cvl
	FROM ${ref({name: "credit_facility_events", schema: envs.currentImportSchema})}
	WHERE event_type = "initialized"

), approved_line_of_credit AS (

	SELECT
		  terms.*
		, cfe.recorded_at AS loc_approved_at
	FROM ${ref({name: "credit_facility_events", schema: envs.currentImportSchema})} cfe
	LEFT JOIN line_of_credit_terms terms ON terms.loc_id = cfe.id
	WHERE event_type = "approval_process_concluded"
	AND JSON_VALUE(event, "$.approved") = 'true'

)

SELECT * FROM approved_line_of_credit
