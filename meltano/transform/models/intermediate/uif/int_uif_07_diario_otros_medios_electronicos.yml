version: 2

models:
  - name: int_uif_07_diario_otros_medios_electronicos
    description: >
      Intermediate model that consolidates withdrawal and deposit transactions for UIF regulatory reporting.
      This model performs the core business logic of identifying confirmed electronic payment transactions
      and preparing them for the UIF 07 daily report format.
      
      **Business Context:**
      The UIF (Unidad de InformaciÃ³n Financiera) requires daily reporting of electronic payment transactions
      exceeding $25,000. This model focuses on two key transaction types:
      - Withdrawals: Customer funds moving from internal accounts to external bank accounts
      - Deposits: Customer funds moving from external bank accounts to internal accounts
      
      **Key Business Rules:**
      1. Only confirmed transactions are included (withdrawals with is_confirmed=true, deposits with status='Confirmed')
      2. Bank address information is cross-joined to provide service station details
      
      For detailed output schema and field descriptions, see the corresponding output model:
      `report_uif_07_diario_otros_medios_electronicos`.

    columns:
      - name: numeroRegistroBancario
        description: >
          Bank transaction record identifier. For withdrawals, this is the withdrawal_id.
          For deposits, this is the deposit_id. This serves as the primary transaction
          reference in the UIF report.
        tests:
          - not_null
          
      - name: estacionServicio
        description: >
          Electronic service station details as a JSON object containing bank address information.
          This represents the physical or digital location where the transaction was processed.
          Cross-joined from seed_bank_address to provide consistent address data.
          
      - name: fechaTransaccion
        description: >
          Transaction confirmation timestamp. For withdrawals, this is the earliest timestamp
          when is_confirmed=true. For deposits, this is the earliest timestamp when status='Confirmed'.
          This represents when the transaction was officially completed.
        tests:
          - not_null
          
      - name: tipoPersonaA
        description: >
          Type of person performing the transaction (Section A). Currently null as person
          details are not yet implemented in the source data. This field requires customer
          KYC (Know Your Customer) data to determine if the transaction originator is a
          natural person or legal entity. Will be populated with:
          - 1: Natural person (PersonaDTO)
          - 2: Legal entity (JuridicaDTO)
          
          **Missing Data Source:** Customer profile/KYC information from the customer
          onboarding system (likely Sumsub integration).
          
      - name: detallesPersonaA
        description: >
          Detailed information about the person performing the transaction (Section A).
          Currently null as person details are not yet implemented. This complex struct
          requires comprehensive customer data including names, addresses, identification
          documents, and other personal/legal entity details. Will contain either
          PersonaDTO or JuridicaDTO based on tipoPersonaA value.
          
          **Missing Data Source:** Complete customer profile data including:
          - Personal information (names, birth date, nationality, etc.)
          - Legal entity information (company name, business address, etc.)
          - Identification documents and numbers
          - Address and contact information
          
      - name: tipoPersonaB
        description: >
          Type of person receiving the transaction (Section B). Currently null as person
          details are not yet implemented. This field requires customer KYC data to
          determine if the transaction recipient is a natural person or legal entity.
          Will be populated with:
          - 1: Natural person (PersonaDTO)
          - 2: Legal entity (JuridicaDTO)
          
          **Missing Data Source:** Customer profile/KYC information from the customer
          onboarding system (likely Sumsub integration).
          
      - name: detallesPersonaB
        description: >
          Detailed information about the person receiving the transaction (Section B).
          Currently null as person details are not yet implemented. This complex struct
          requires comprehensive customer data including names, addresses, identification
          documents, and other personal/legal entity details. Will contain either
          PersonaDTO or JuridicaDTO based on tipoPersonaB value.
          
          **Missing Data Source:** Complete customer profile data including:
          - Personal information (names, birth date, nationality, etc.)
          - Legal entity information (company name, business address, etc.)
          - Identification documents and numbers
          - Address and contact information
          
      - name: numeroCuentaPO
        description: >
          Product identifier for the originating account (Section PO - Punto de Origen).
          For withdrawals, this is the public_id of the deposit account being debited.
          For deposits, this is null as deposits don't have an originating internal account.
          
      - name: claseCuentaPO
        description: >
          Product type classification for the originating account (Section PO).
          For withdrawals, this is set to "Cuenta Corriente" (Current Account).
          For deposits, this is null as deposits don't have an originating internal account.
          
      - name: conceptoTransaccionPO
        description: >
          Brief description of the transaction concept for the originating side.
          This field contains the reference/description provided by the customer when
          initiating the transaction. It describes the business purpose or nature of
          the transaction (e.g., "real estate purchase", "vehicle sale", "inventory sales", etc.).
          
          Currently being mapped from the deposit/withdrawal reference.
          
      - name: valorOtrosMediosElectronicosPO
        description: >
          Total transaction amount in USD for the originating side (Section PO).
          This represents the monetary value of the electronic payment transaction.
        tests:
          - not_null
          
      - name: numeroProductoPB
        description: >
          Product identifier for the destination account (Section PB - Punto de Beneficio).
          For deposits, this is the public_id of the deposit account being credited.
          For withdrawals, this is null as withdrawals don't have a destination internal account.
          
      - name: claseCuentaPB
        description: >
          Product type classification for the destination account (Section PB).
          For deposits, this is set to "Cuenta Corriente" (Current Account).
          For withdrawals, this is null as withdrawals don't have a destination internal account.
          
      - name: montoTransaccionPB
        description: >
          Total transaction amount in USD for the destination side (Section PB).
          This represents the monetary value received in the destination account.
        tests:
          - not_null
          
      - name: valorMedioElectronicoPB
        description: >
          Total electronic payment amount in USD for the destination side (Section PB).
          This represents the value of the electronic payment method used.
        tests:
          - not_null
          
      - name: bancoCuentaDestinatariaPB
        description: >
          Destination bank identifier for the transaction (Section PB).
          Currently null as external bank details are not yet implemented in the source data.
          This field should contain the identifier of the external bank account involved
          in the transaction (e.g., bank routing number, SWIFT code, or bank identifier).
          
          **Missing Data Source:** External bank account information from:
          - Customer-provided external bank account details
          - Bank routing/SWIFT code lookup system
          - Integration with external banking APIs
          - Manual bank account verification system

