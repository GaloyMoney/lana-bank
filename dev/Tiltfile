is_ci = sys.argv[1] == "ci"

docker_compose("../docker-compose.yml", project_name="lana-bank")
docker_groups = {
    "auth": ["kratos", "kratos-pg", "oathkeeper"],
    "otel": ["otel-agent"],
    "cala": ["cala", "cala-pg"],
    "core": ["core-pg"],
    "dev": ["mailhog", "next-auth-pg"],
}

for service, deps in docker_groups.items():
    for dep in deps:
        dc_resource(dep, labels=[service])

#local_resource(
#    "core",
#    labels=["core"],
#    serve_cmd="cd .. && make run-server",
#    serve_env={
#        "PG_CON": "postgres://user:password@localhost:5433/pg",
#        "OTEL_EXPORTER_OTLP_ENDPOINT": "http://localhost:4317",
#    },
#    readiness_probe=probe(
#        period_secs=5,
#        http_get=http_get_action(
#            path="/admin/graphql",
#            port=4455,
#        ),
#    ),
#    allow_parallel=True,
#    resource_deps=[
#        "cala",
#        "core-pg",
#        "cala-pg",
#    ],
#    links = [
#        link("http://localhost:4455/admin/graphql", "playground"),
#    ]
#)

#local_resource(
#    "admin-panel",
#    labels=["apps"],
#    serve_env={
#        "NEXT_PUBLIC_BASE_PATH": "/admin-panel"
#    },
#    serve_cmd="cd ../apps/admin-panel && pnpm install && pnpm run dev",
#    readiness_probe = probe(
#        period_secs  = 5,
#        http_get = http_get_action(
#            path = "/admin-panel",
#            port = 4455,
#        ),
#    ),
#    allow_parallel=True,
#    resource_deps=[
#        "next-auth-pg",
#        "mailhog",
#        "core",
#    ],
#    links = [
#        link("http://localhost:4455/admin-panel", "admin-panel"),
#    ]
#)
#
#
#if is_ci:
#    local_resource(
#        name="cypress",
#        labels=["apps-ci-test"],
#        cmd="cd ../apps/admin-panel && pnpm cypress:run headless",
#        allow_parallel=True,
#        resource_deps=[
#            "admin-panel"
#        ],
#    )
