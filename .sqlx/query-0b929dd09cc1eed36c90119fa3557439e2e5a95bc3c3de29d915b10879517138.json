{
  "db_name": "PostgreSQL",
  "query": "WITH entities AS (SELECT credit_facility_id, created_at, id FROM core_interest_accrual_cycles WHERE ((credit_facility_id = $1) AND (COALESCE((created_at, id) < ($4, $3), $3 IS NULL))) ORDER BY created_at DESC, id DESC LIMIT $2) SELECT i.id AS \"entity_id: Repo__Id\", e.sequence, e.event, CASE WHEN $5 THEN e.context ELSE NULL::jsonb END as \"context: es_entity::ContextData\", e.recorded_at FROM entities i JOIN core_interest_accrual_cycle_events e ON i.id = e.id ORDER BY i.created_at desc, i.id desc, i.id, e.sequence",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "entity_id: Repo__Id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "sequence",
        "type_info": "Int4"
      },
      {
        "ordinal": 2,
        "name": "event",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 3,
        "name": "context: es_entity::ContextData",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 4,
        "name": "recorded_at",
        "type_info": "Timestamptz"
      }
    ],
    "parameters": {
      "Left": [
        "Uuid",
        "Int8",
        "Uuid",
        "Timestamptz",
        "Bool"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      null,
      false
    ]
  },
  "hash": "0b929dd09cc1eed36c90119fa3557439e2e5a95bc3c3de29d915b10879517138"
}
