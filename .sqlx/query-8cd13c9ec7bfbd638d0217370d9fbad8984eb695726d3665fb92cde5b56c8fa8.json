{
  "db_name": "PostgreSQL",
  "query": "WITH entities AS (SELECT customer_id, approval_process_id, id FROM core_credit_facility_proposals WHERE ((customer_id = $1) AND (COALESCE((approval_process_id, id) < ($4, $3), $3 IS NULL))) ORDER BY approval_process_id DESC, id DESC LIMIT $2) SELECT i.id AS \"entity_id: Repo__Id\", e.sequence, e.event, CASE WHEN $5 THEN e.context ELSE NULL::jsonb END as \"context: es_entity::ContextData\", e.recorded_at FROM entities i JOIN core_credit_facility_proposal_events e ON i.id = e.id ORDER BY i.approval_process_id desc, i.id desc, i.id, e.sequence",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "entity_id: Repo__Id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "sequence",
        "type_info": "Int4"
      },
      {
        "ordinal": 2,
        "name": "event",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 3,
        "name": "context: es_entity::ContextData",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 4,
        "name": "recorded_at",
        "type_info": "Timestamptz"
      }
    ],
    "parameters": {
      "Left": [
        "Uuid",
        "Int8",
        "Uuid",
        "Uuid",
        "Bool"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      null,
      false
    ]
  },
  "hash": "8cd13c9ec7bfbd638d0217370d9fbad8984eb695726d3665fb92cde5b56c8fa8"
}
