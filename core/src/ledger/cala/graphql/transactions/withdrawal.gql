mutation InitiateWithdrawalFromCheckingTxTemplateCreate(
  $templateId: UUID!
  $journalId: Expression!
) {
  txTemplateCreate(
    input: {
      txTemplateId: $templateId
      code: "INITIATE_WITHDRAWAL_FROM_CHECKING"
      description: "A withdrawal from user checking account."
      params: [
        {
          name: "userAccount"
          type: UUID
          description: "User checking account ID."
        }
        { name: "bankAccount", type: UUID, description: "Bank USD account ID." }
        {
          name: "amount"
          type: DECIMAL
          description: "Amount with decimal, e.g. `1.23`."
        }
        {
          name: "externalId"
          type: STRING
          description: "External ID for the transaction"
        }
        {
          name: "effective"
          type: DATE
          description: "Effective date for transaction."
          default: "date()"
        }
      ]
      txInput: { journalId: $journalId, effective: "params.effective" }
      entries: [
        {
          accountId: "params.userAccount"
          units: "params.amount"
          currency: "'USD'"
          entryType: "'INITIATE_WITHDRAW_DR'"
          direction: "DEBIT"
          layer: "SETTLED"
        }
        {
          accountId: "params.userAccount"
          units: "params.amount"
          currency: "'USD'"
          entryType: "'INITIATE_WITHDRAW_CR'"
          direction: "CREDIT"
          layer: "ENCUMBERED"
        }
        {
          accountId: "params.bankAccount"
          units: "params.amount"
          currency: "'USD'"
          entryType: "'INITIATE_WITHDRAW_DR'"
          direction: "DEBIT"
          layer: "ENCUMBERED"
        }
        {
          accountId: "params.bankAccount"
          units: "params.amount"
          currency: "'USD'"
          entryType: "'INITIATE_WITHDRAW_CR'"
          direction: "CREDIT"
          layer: "SETTLED"
        }
      ]
    }
  ) {
    txTemplate {
      txTemplateId
      version
    }
  }
}

mutation PostInitiateWithdrawalFromCheckingTransaction(
  $transactionId: UUID!
  $userAccount: UUID!
  $bankAccount: UUID!
  $amount: Decimal!
  $externalId: String!
) {
  postTransaction(
    input: {
      transactionId: $transactionId
      txTemplateCode: "INITIATE_WITHDRAWAL_FROM_CHECKING"
      params: {
        userAccount: $userAccount
        bankAccount: $bankAccount
        amount: $amount
        externalId: $externalId
      }
    }
  ) {
    transaction {
      transactionId
      correlationId
    }
  }
}

mutation SettleWithdrawalFromCheckingTxTemplateCreate(
  $templateId: UUID!
  $journalId: Expression!
) {
  txTemplateCreate(
    input: {
      txTemplateId: $templateId
      code: "SETTLE_WITHDRAWAL_FROM_CHECKING"
      description: "A withdrawal from user checking account."
      params: [
        {
          name: "userAccount"
          type: UUID
          description: "User checking account ID."
        }
        { name: "bankAccount", type: UUID, description: "Bank USD account ID." }
        {
          name: "amount"
          type: DECIMAL
          description: "Amount with decimal, e.g. `1.23`."
        }
        {
          name: "externalId"
          type: STRING
          description: "External ID for the transaction"
        }
        {
          name: "effective"
          type: DATE
          description: "Effective date for transaction."
          default: "date()"
        }
      ]
      txInput: { journalId: $journalId, effective: "params.effective" }
      entries: [
        {
          accountId: "params.userAccount"
          units: "params.amount"
          currency: "'USD'"
          entryType: "'SETTLE_WITHDRAW_DR'"
          direction: "DEBIT"
          layer: "ENCUMBERED"
        }
        {
          accountId: "params.bankAccount"
          units: "params.amount"
          currency: "'USD'"
          entryType: "'SETTLE_WITHDRAW_CR'"
          direction: "CREDIT"
          layer: "ENCUMBERED"
        }
      ]
    }
  ) {
    txTemplate {
      txTemplateId
      version
    }
  }
}

mutation PostSettleWithdrawalFromCheckingTransaction(
  $transactionId: UUID!
  $userAccount: UUID!
  $bankAccount: UUID!
  $amount: Decimal!
  $externalId: String!
) {
  postTransaction(
    input: {
      transactionId: $transactionId
      txTemplateCode: "SETTLE_WITHDRAWAL_FROM_CHECKING"
      params: {
        userAccount: $userAccount
        bankAccount: $bankAccount
        amount: $amount
        externalId: $externalId
      }
    }
  ) {
    transaction {
      transactionId
      correlationId
    }
  }
}
