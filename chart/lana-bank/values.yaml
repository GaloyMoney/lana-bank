fullnameOverride: ""
nameOverride: ""
lanaBank:
  resources: {}
  tracing:
    serviceName: lana-dev
    otelExporterOtlpEndpoint: "http://localhost:4317"
  jwksUrl: "http://lana-bank-oathkeeper-api:4456/.well-known/jwks.json"
  app:
    jobExecution:
      pollInterval: 20
    ledger:
      calaUrl: "http://cala:2252/graphql"
    user:
      superuserEmail: "galoysuperuser@mailinator.com"
    customer:
      kratos:
        adminUrl: "http://lana-bank-kratos-admin:80"
    serviceAccount:
      gcpLocation: "europe-west6"
    storage:
      bucketName: "dummy-volcano-documents"
      rootFolder: "dummy"
    report:
      dataformRepo: "dummy-repo"
      dataformOutputDataset: "dataform_dummy"
      dataformReleaseConfig: "dummy-release"
  db:
    poolSize: 20
  server:
    public:
      type: ClusterIP
      port: 5252
      staticIP: ""
      annotations: {}
    admin:
      type: ClusterIP
      port: 5253
      staticIP: ""
      annotations: {}
  labels: {}
  imagePullSecrets: []
  image:
    repository: us.gcr.io/galoyorg/lana-bank
    digest: "sha256:d7f3d685533013c7d23f72b862352d59260f42d7b4fbc96c0efe515035c8001b" # METADATA:: repository=https://github.com/GaloyMoney/lana-bank;commit_ref=f6dbb19;app=lana-bank;
  replicas: 2
  annotations:
  secrets:
    create: true
    pgCon: ""
    bqServiceAccountBase64: ""
    nextAuthSecret: ""
    nextAuthAdminPgCon: ""
    smtpUri: ""
    sumsubKey: ""
    sumsubSecret: ""
    annotations:
  ingress:
    enabled: false
    customerPortalHost: app.staging.lana.galoy.io
    adminPanelHost: admin.staging.lana.galoy.io
  adminPanel:
    image:
      repository: us.gcr.io/galoyorg/lana-bank-admin-panel
      digest: "sha256:3841c37455e563c9b7d75c7dd309ed4b3caafce64761e403de934f6b7796c9a2" # METADATA:: repository=https://github.com/GaloyMoney/lana-bank;commit_ref=92f8991;app=admin-panel;
    service:
      type: ClusterIP
      port: 3000
    coreAdminUrl: http://lana-bank-admin:5253
    userAllowedCallbackUrl: http://lana-bank-admin:5253/user/callback
    nextAuthUrl: http://lana-bank-admin:5253/api/auth
    nextAuthInternalUrl: http://lana-bank-admin:5253/api/auth
    emailFrom: admin@lana.galoy.io
  customerPortal:
    kratosPublicUrl: http://lana-bank-kratos-public:80
    kratosAdminUrl: http://lana-bank-kratos-admin:80
    corePublicUrl: http://lana-bank-public:5252
    image:
      repository: us.gcr.io/galoyorg/lana-bank-customer-portal
      digest: "sha256:589f40c223bc096fcaba2965c6bf10486ac99c02fa243d8cd12a192fc4bfaea7" # METADATA:: repository=https://github.com/GaloyMoney/lana-bank;commit_ref=92f8991;app=customer-portal;
    service:
      type: ClusterIP
      port: 3000
postgresql:
  enabled: true
  auth:
    enablePostgresUser: false
    username: lana-bank
    password: lana-bank
    database: lana-bank
resources: {}
# ORY STACK
oathkeeper:
  maester:
    enabled: false
  replicaCount: 2
  oathkeeper:
    config:
      log:
        level: debug
        format: json
      authenticators:
        bearer_token:
          enabled: true
          config:
            check_session_url: http://lana-bank-kratos-public:80/sessions/whoami
            preserve_path: true
            preserve_query: true
            subject_from: identity.id
            extra_from: "@this"
        cookie_session:
          enabled: true
          config:
            check_session_url: http://lana-bank-admin-panel:3000/api/auth/session
            preserve_path: true
            preserve_query: true
            subject_from: user.email
            extra_from: "@this"
            force_method: "GET"
        anonymous:
          enabled: true
          config:
            subject: anonymous
        noop:
          enabled: true
      authorizers:
        allow:
          enabled: true
      mutators:
        hydrator:
          enabled: true
          config:
            api:
              url: http://lana-bank-admin:5253/user/id-from-email
        noop:
          enabled: true
        id_token:
          enabled: true
          config:
            jwks_url: "file://etc/secrets/mutator.id_token.jwks.json"
            issuer_url: "lana.bank"
            claims: '{"sub": "{{ print .Subject }}" }'
        header:
          enabled: true
          config:
            headers:
              X-USER-ID: "{{ .Subject }}"
      errors:
        fallback:
          - json
        handlers:
          json:
            enabled: true
            config:
              verbose: true
      access_rules:
        matching_strategy: regexp
    accessRules: |
      - id: kratos-public
        upstream:
          url: "http://lana-bank-kratos-public:80"
          preserve_host: true
        match:
          url: "<(http|https)>://<[a-zA-Z0-9-.:]+>/<(sessions|self-service)>/<.*>"
          methods: ["POST", "GET", "OPTIONS", "PUT", "DELETE", "PATCH"]
        authenticators:
          - handler: noop
        authorizer:
          handler: allow
        mutators:
          - handler: noop
kratos:
  secret:
    enabled: true
    nameOverride: ""
  ingress:
    admin:
      enabled: false
    public:
      enabled: false
  replicaCount: 2
  deployment:
    livenessProbe:
      periodSeconds: 1
  kratos:
    automigration:
      enabled: true
    config:
      dsn: postgresql://kratos-pg:kratos-pg@postgresql/kratos-pg
      cookies:
        domain: localhost # var.root_domain
      serve:
        public:
          request_log:
            disable_for_health: true
          base_url: http://localhost:4433/
          cors:
            enabled: true
            allow_credentials: true
            allowed_methods:
              - POST
              - GET
              - PUT
              - PATCH
              - DELETE
            allowed_headers:
              - Authorization
              - Cookie
              - Content-Type
              - X-Session-Token
            exposed_headers:
              - Content-Type
              - Set-Cookie
            debug: true
        admin:
          request_log:
            disable_for_health: true
          base_url: http://lana-bank-kratos-admin:80/
      selfservice:
        default_browser_return_url: http://lana-bank-customer-portal:3000/
        allowed_return_urls:
          - http://lana-bank-customer-portal:3000
        methods:
          oidc:
            enabled: false
          webauthn:
            enabled: false
          totp:
            enabled: true
          code:
            enabled: true
            passwordless_enabled: true
            config:
              # Defines how long the verification or the recovery code is valid for (default 1h)
              lifespan: 15m
        flows:
          error:
            ui_url: http://lana-bank-customer-portal:3000/_error
          settings:
            ui_url: http://lana-bank-customer-portal:3000/settings
            privileged_session_max_age: 1s
            required_aal: aal1
          recovery:
            enabled: true
            ui_url: http://lana-bank-customer-portal:3000/auth
          verification:
            use: code
            enabled: true
            lifespan: 15m
          logout:
            after:
              default_browser_return_url: http://lana-bank-customer-portal:3000/auth
          login:
            ui_url: http://lana-bank-customer-portal:3000/auth
            lifespan: 10m
          registration:
            lifespan: 10m
            ui_url: http://lana-bank-customer-portal:3000/auth
            after:
              code:
                hooks:
                  - hook: web_hook
                    config:
                      url: http://lana-bank-admin:5253/customer/callback
                      method: POST
                      body: base64://ZnVuY3Rpb24oY3R4KSB7CiAgICBpZGVudGl0eV9pZDogaWYgc3RkLm9iamVjdEhhcyhjdHgsICJpZGVudGl0eSIpIHRoZW4gY3R4LmlkZW50aXR5LmlkIGVsc2UgbnVsbCwKICAgIGVtYWlsOiBpZiBzdGQub2JqZWN0SGFzKGN0eC5pZGVudGl0eS50cmFpdHMsICJlbWFpbCIpIHRoZW4gY3R4LmlkZW50aXR5LnRyYWl0cy5lbWFpbCBlbHNlIG51bGwsCiAgICB0cmFuc2llbnRfcGF5bG9hZDogaWYgc3RkLm9iamVjdEhhcyhjdHguZmxvdywgInRyYW5zaWVudF9wYXlsb2FkIikgdGhlbiBjdHguZmxvdy50cmFuc2llbnRfcGF5bG9hZCBlbHNlIG51bGwsCiAgICBzY2hlbWFfaWQ6IGN0eC5pZGVudGl0eS5zY2hlbWFfaWQsCiAgICBmbG93X2lkOiBjdHguZmxvdy5pZCwKICAgIGZsb3dfdHlwZTogY3R4LmZsb3cudHlwZQp9Cg==
                      auth:
                        type: api_key
                        config:
                          name: Authorization
                          value: The-Value-of-My-Key
                          in: header
                  - hook: session
      courier:
        smtp:
          connection_uri: smtps://test:test@mailslurper:1025/?skip_ssl_verify=true
        templates:
          recovery_code:
            valid:
              email:
                subject: base64://eW91ciBjb2RlCg==
                body:
                  # courier/template/courier/builtin/templates/recovery_code/valid/email.body.plaintext.gotmpl
                  # Hi,
                  # You can confirm access to your Lana account by entering the following code:
                  # {{ .RecoveryCode }}
                  # Don't share this code with anyone. Our employee will never ask for this code
                  plaintext: base64://SGksCgpZb3UgY2FuIGNvbmZpcm0gYWNjZXNzIHRvIHlvdXIgYmxpbmsgYWNjb3VudCBieSBlbnRlcmluZyB0aGUgZm9sbG93aW5nIGNvZGU6Cgp7eyAuUmVjb3ZlcnlDb2RlIH19CgpEb24ndCBzaGFyZSB0aGlzIGNvZGUgd2l0aCBhbnlvbmUuIE91ciBlbXBsb3llZSB3aWxsIG5ldmVyIGFzayBmb3IgdGhpcyBjb2RlCg==
                  html: base64://SGksCgpZb3UgY2FuIGNvbmZpcm0gYWNjZXNzIHRvIHlvdXIgYmxpbmsgYWNjb3VudCBieSBlbnRlcmluZyB0aGUgZm9sbG93aW5nIGNvZGU6Cgp7eyAuUmVjb3ZlcnlDb2RlIH19CgpEb24ndCBzaGFyZSB0aGlzIGNvZGUgd2l0aCBhbnlvbmUuIE91ciBlbXBsb3llZSB3aWxsIG5ldmVyIGFzayBmb3IgdGhpcyBjb2RlCg==
      session:
        lifespan: "1h"
        whoami:
          required_aal: highest_available
      log:
        level: debug
        format: json
        leak_sensitive_values: true
      ciphers:
        algorithm: xchacha20-poly1305
      hashers:
        algorithm: bcrypt
        bcrypt:
          cost: 8
      tracing: {}
      identity:
        schemas:
          - id: email
            url: file:///etc/config/identity.schema.json
        default_schema_id: email
    identitySchemas:
      "identity.schema.json": |
        {
          "$id": "https://schemas.ory.sh/presets/kratos/quickstart/email-password/identity.schema.json",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Person",
          "type": "object",
          "properties": {
            "traits": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "title": "E-Mail",
                  "minLength": 3,
                  "ory.sh/kratos": {
                    "credentials": {
                      "webauthn": {
                        "identifier": true
                      },
                      "code": {
                        "identifier": true,
                        "via": "email"
                      }
                    },
                    "verification": {
                      "via": "email"
                    },
                    "recovery": {
                      "via": "email"
                    }
                  }
                }
              },
              "required": ["email"],
              "additionalProperties": false
            }
          }
        }
    emailTemplates: {}
