apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "lanaBank.server.fullname" . }}
  labels:
    app: {{ template "lanaBank.server.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    kube-monkey/identifier: {{ template "lanaBank.server.fullname" . }}
    kube-monkey/enabled: enabled
    kube-monkey/kill-mode: fixed
    kube-monkey/kill-value: "1"
    kube-monkey/mtbf: "3"
spec:
  selector:
    matchLabels:
      app: {{ template "lanaBank.server.fullname" . }}
      release: {{ .Release.Name }}
  replicas: {{ .Values.lanaBank.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "lanaBank.server.fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        kube-monkey/identifier: {{ template "lanaBank.server.fullname" . }}
        kube-monkey/enabled: enabled
      {{- with .Values.lanaBank.labels }}
        {{ toYaml . | nindent 8 }}
      {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config-map.yaml") . | sha256sum }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
      - name: wait-for-postgresql
        image: postgres
        command:
          - "bash"
          - "-c"
          - |
            while ! pg_isready -d $PG_CON > /dev/null 2>&1
            do
              echo "waiting for postgres to come up"
              sleep 5
            done
        env:
        - name: PG_CON
          valueFrom:
            secretKeyRef:
              name: {{ template "lanaBank.fullname" . }}
              key: "pg-con"
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.lanaBank.image.repository }}@{{ .Values.lanaBank.image.digest }}"
        ports:
        - name: public
          containerPort: {{ .Values.lanaBank.server.public.port }}
          protocol: TCP
        - name: admin
          containerPort: {{ .Values.lanaBank.server.admin.port }}
          protocol: TCP
        args:
        - lana-cli

        volumeMounts:
        - name: "config"
          mountPath: "/lana.yml"
          subPath: "lana.yml"
        resources:
          {{ toYaml .Values.resources | nindent 10 }}
        env:
        - name: lana_CONFIG
          value: "/lana.yml"
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: {{ .Values.lanaBank.tracing.otelExporterOtlpEndpoint | quote }}
        - name: SA_CREDS_BASE64
          valueFrom:
            secretKeyRef:
              name: {{ template "lanaBank.fullname" . }}
              key: "bq-service-account-base64"
        - name: PG_CON
          valueFrom:
            secretKeyRef:
              name: {{ template "lanaBank.fullname" . }}
              key: "pg-con"
        - name: SUMSUB_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "lanaBank.fullname" . }}
              key: "sumsub-key"
        - name: SUMSUB_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ template "lanaBank.fullname" . }}
              key: "sumsub-secret"
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        startupProbe:
          httpGet:
            path: /health
            port: {{ .Values.lanaBank.server.admin.port }}
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.lanaBank.server.admin.port }}
        resources:
        {{- toYaml .Values.lanaBank.resources | nindent 10 }}
      volumes:
      - name: config
        configMap:
          name: {{ include "lanaBank.fullname" . }}-config
