name: Audit

on:
  pull_request:
    branches:
      - main
      - "feature/**"

jobs:
  rust_audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  pnpm_audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
      - run: pnpm install
      - run: pnpm audit --audit-level=high

  pip_audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install Poetry + pip-audit
        run: |
          # 1 ▸ install for the current user
          python -m pip install --user --no-cache-dir "poetry>=1.8,<2.0" pip-audit
          # 2 ▸ ensure the user-level bin directory is on PATH
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"

      - name: Find every poetry.lock and audit it
        run: |
          set -euo pipefail

          # 1 — collect all folders that have a poetry.lock
          mapfile -t PROJECT_DIRS < <(
            find . -type f -name 'poetry.lock' -exec dirname {} \; | sort -u
          )

          if [ "${#PROJECT_DIRS[@]}" -eq 0 ]; then
            echo "⚠️  No Poetry projects found – skipping pip-audit."
            exit 0
          fi

          # 2 — for each project, export the lock and audit it
          for dir in "${PROJECT_DIRS[@]}"; do
            echo ""
            echo "🔍 Exporting $dir/poetry.lock → requirements.txt"
            tmp_req="$(mktemp)"
            python -m poetry --directory "$dir" export -f requirements.txt \
                              --without-hashes --output "$tmp_req"

            echo "🔍 pip-audit → $dir"
            pip-audit -r "$tmp_req"
          done