name: "setup-nix"

description: "Composite action to install Nix, configure Cachix, cache Cargo dependencies, and optionally authenticate to Google Cloud."

inputs:
  cachix_auth_token:
    description: "Cachix authentication token."
    required: true
  google_credentials:
    description: "Google Cloud service account credentials JSON."
    required: false
  free_disk_space:
    description: "Whether to run the free-disk-space action."
    required: false
    default: 'true'

runs:
  using: "composite"
  steps:
    - uses: DeterminateSystems/nix-installer-action@v16
    # - uses: jlumbroso/free-disk-space@main
    #   if: inputs.free_disk_space == 'true'
    #   with:
    #     tool-cache: false
    #     android: true
    #     dotnet: true
    #     haskell: true
    #     large-packages: true
    #     docker-images: true
    #     swap-storage: true

    - uses: cachix/cachix-action@v15
      with:
        name: lana
        authToken: ${{ inputs.cachix_auth_token }}

    - run: nix flake check
      shell: bash

    - name: Start root-less Podman socket
      shell: bash
      run: |
        # single nix develop; everything after --command runs *inside* the dev-shell
        nix develop --accept-flake-config \
          --command bash -euo pipefail -c "
            # 1) Pick a runtime dir (GitHub runner has none by default)
            export XDG_RUNTIME_DIR=\${XDG_RUNTIME_DIR:-/tmp/xdg-run-\$UID}
            mkdir -p \"\$XDG_RUNTIME_DIR/podman\"

            # 2) Launch the REST API socket; keep it alive; ignore SIGHUP
            nohup podman system service --time=0 \
                  unix://\$XDG_RUNTIME_DIR/podman/podman.sock \
                  >\"\$RUNNER_TEMP/podman.log\" 2>&1 &

            # 3) Hand the socket path to all later workflow steps
            echo \"DOCKER_HOST=unix://\$XDG_RUNTIME_DIR/podman/podman.sock\" >> \"\$GITHUB_ENV\"
          "

    - name: Smoke-test the socket (optional, but useful!)
      shell: bash
      run: |
        set -e
        cat "$RUNNER_TEMP/podman.log" || true
        podman --url "$DOCKER_HOST" info

    - name: Authenticate to Google Cloud
      env:
        GOOGLE_CREDENTIALS: ${{ inputs.google_credentials }}
      if: inputs.google_credentials != ''
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ inputs.google_credentials }} 
