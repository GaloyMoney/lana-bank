#@ load("@ytt:data", "data")

#@ load("vendor/pipeline-fragments.lib.yml",
#@   "private_gar_registry",
#@   "release_task_image_config")

#@ def galoy_dev_image():
#@   return data.values.gar_registry + "/galoy-dev"
#@ end

#@ def task_image_config():
type: registry-image
source:
  username: ((gar-creds.username))
  password: ((gar-creds.password))
  repository: #@ galoy_dev_image()
#@ end

#@ def build_app_edge_image_name(app):
#@   return "build-" + app + "-edge-image"
#@ end

#@ def build_app_edge_image(app):
name: #@ build_app_edge_image_name(app)
serial: true
plan:
  - in_parallel:
      - get: #@ app_src_resource_name(app)
        trigger: true
      - { get: pipeline-tasks }
  - task: extract-commit-hash
    config:
      platform: linux
      image_resource:
        type: registry-image
        source: {repository: alpine, tag: latest}
      inputs:
        - name: #@ app_src_resource_name(app)
          path: repo
      outputs:
        - name: build-args-output
      run:
        path: sh
        args:
          - -exc
          - |
            mkdir -p build-args-output
            echo "COMMITHASH=$(cat repo/.git/ref)" > build-args-output/build.args
  - task: build
    attempts: 2
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: concourse/oci-build-task
      inputs:
        - name: repo
        - name: build-args-output
      outputs:
        - name: image
      params:
        CONTEXT: repo
        DOCKERFILE: #@ "repo/apps/" + app + "/Dockerfile"
        BUILD_ARGS_FILE: build-args-output/build.args
      run:
        path: build
  - put: #@ app_edge_image_resource_name(app)
    params:
      image: image/image.tar
#@ end

#@ def app_src_resource_name(app):
#@   return app + "-src"
#@ end

#@ def app_src_resource(app, branch):
name: #@ app_src_resource_name(app)
type: git
source:
  paths:
  - #@ "apps/" + app
  - #@ "apps/" + app + "/*"
  - #@ "apps/" + app + "/**/*"
  - flake.nix
  - flake.lock
  - pnpm-lock.yaml
  fetch_tags: true
  uri: #@ data.values.git_uri
  branch: #@ branch
  private_key: #@ data.values.github_private_key
#@ end

#@ def app_edge_image_resource_name(app):
#@   return app + "-edge-image"
#@ end

#@ def app_edge_image(app):
name: #@ app_edge_image_resource_name(app)
type: registry-image
source:
  tag: edge
  username: #@ data.values.gar_registry_user
  password: #@ data.values.gar_registry_password
  repository: #@ private_gar_registry() + "/" + data.values.gh_repository + "-" + app
#@ end

#@ def app_latest_image_resource_name(app):
#@   return app + "-latest-image"
#@ end

#@ def app_latest_image(app):
name: #@ app_latest_image_resource_name(app)
type: registry-image
source:
  tag: latest
  username: #@ data.values.gar_registry_user
  password: #@ data.values.gar_registry_password
  repository: #@ private_gar_registry() + "/" + data.values.gh_repository + "-" + app
#@ end
