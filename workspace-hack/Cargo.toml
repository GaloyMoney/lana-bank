# This file is generated by `cargo hakari`.
# To regenerate, run:
#     cargo hakari generate

[package]
name = "workspace-hack"
version = "0.1.0"
edition = "2021"
license = "FSL-1.1-ALv2"
description = "workspace-hack package, managed by hakari"
# You can choose to publish this crate: see https://docs.rs/cargo-hakari/latest/cargo_hakari/publishing.
publish = false

# The parts of the file between the BEGIN HAKARI SECTION and END HAKARI SECTION comments
# are managed by hakari.

### BEGIN HAKARI SECTION
[dependencies]
ahash = { version = "0.8", default-features = false, features = ["compile-time-rng", "runtime-rng", "std"] }
async-graphql = { version = "7", default-features = false, features = ["chrono", "dataloader", "playground", "tempfile", "tracing"] }
axum = { version = "0.8", features = ["macros"] }
axum-core = { version = "0.5", default-features = false, features = ["tracing"] }
base16ct = { version = "0.2", default-features = false, features = ["alloc"] }
base64 = { version = "0.22" }
byteorder = { version = "1", default-features = false, features = ["std"] }
bytes = { version = "1", features = ["serde"] }
cala-ledger = { version = "0.11", default-features = false, features = ["graphql", "json-schema"] }
cala-ledger-core-types = { version = "0.11", default-features = false, features = ["graphql", "json-schema"] }
chrono = { version = "0.4", features = ["serde"] }
cipher = { version = "0.4", default-features = false, features = ["block-padding", "zeroize"] }
clap = { version = "4", features = ["derive", "env"] }
clap_builder = { version = "4", default-features = false, features = ["color", "env", "help", "std", "suggestions", "usage"] }
crypto-common = { version = "0.1", default-features = false, features = ["getrandom", "std"] }
der = { version = "0.7", default-features = false, features = ["oid", "pem", "std"] }
deranged = { version = "0.5", features = ["powerfmt", "serde"] }
digest = { version = "0.10", features = ["mac", "oid", "std"] }
ecdsa = { version = "0.16", default-features = false, features = ["pem", "signing", "std", "verifying"] }
either = { version = "1", features = ["serde", "use_std"] }
elliptic-curve = { version = "0.13", default-features = false, features = ["digest", "hazmat", "pem", "std"] }
es-entity = { version = "0.9", default-features = false, features = ["event-context", "graphql", "json-schema", "sim-time", "tracing-context"] }
ff = { version = "0.13", default-features = false, features = ["alloc"] }
fixedbitset = { version = "0.4" }
form_urlencoded = { version = "1" }
futures = { version = "0.3" }
futures-channel = { version = "0.3", features = ["sink"] }
futures-core = { version = "0.3" }
futures-io = { version = "0.3" }
futures-sink = { version = "0.3" }
futures-task = { version = "0.3" }
futures-util = { version = "0.3", features = ["channel", "io", "sink"] }
generic-array = { version = "0.14", default-features = false, features = ["more_lengths", "zeroize"] }
getrandom = { version = "0.2", default-features = false, features = ["std"] }
group = { version = "0.13", default-features = false, features = ["alloc"] }
hashbrown = { version = "0.14", features = ["raw"] }
hmac = { version = "0.12", default-features = false, features = ["reset"] }
hyper = { version = "1", features = ["client", "http1", "http2", "server"] }
hyper-util = { version = "0.1", features = ["client-legacy", "server-auto", "service"] }
idna = { version = "1" }
indexmap = { version = "2", features = ["serde"] }
inout = { version = "0.1", default-features = false, features = ["block-padding"] }
job = { version = "0.1", default-features = false, features = ["json-schema"] }
lalrpop-util = { version = "0.20", features = ["lexer"] }
log = { version = "0.4", default-features = false, features = ["std"] }
memchr = { version = "2" }
num-traits = { version = "0.2", features = ["i128"] }
once_cell = { version = "1", features = ["portable-atomic"] }
opentelemetry-http = { version = "0.30", features = ["reqwest-rustls-webpki-roots"] }
opentelemetry-otlp = { version = "0.30", default-features = false, features = ["grpc-tonic", "http-proto", "reqwest-client", "reqwest-rustls-webpki-roots"] }
opentelemetry_sdk = { version = "0.30", features = ["rt-tokio"] }
percent-encoding = { version = "2" }
petgraph = { version = "0.6" }
pkcs8 = { version = "0.10", default-features = false, features = ["encryption", "pem", "std"] }
prost = { version = "0.13", features = ["prost-derive"] }
rand = { version = "0.9" }
rand_core = { version = "0.6", default-features = false, features = ["std"] }
regex-automata = { version = "0.4", default-features = false, features = ["dfa-build", "dfa-onepass", "hybrid", "meta", "nfa-backtrack", "perf", "std", "unicode"] }
regex-syntax = { version = "0.8" }
reqwest = { version = "0.12", default-features = false, features = ["blocking", "charset", "http2", "json", "macos-system-configuration", "multipart", "rustls-tls", "stream"] }
rust_decimal = { version = "1", features = ["maths"] }
rustls = { version = "0.23", default-features = false, features = ["logging", "ring", "std", "tls12"] }
schemars = { version = "1", features = ["chrono04", "rust_decimal1", "uuid1"] }
sec1 = { version = "0.7", features = ["pem", "std", "subtle"] }
serde = { version = "1", features = ["alloc", "derive", "rc"] }
serde_core = { version = "1", features = ["alloc", "rc"] }
serde_json = { version = "1", features = ["alloc", "raw_value", "unbounded_depth"] }
serde_with = { version = "3" }
sha2 = { version = "0.10" }
signature = { version = "2", default-features = false, features = ["digest", "rand_core", "std"] }
smallvec = { version = "1", default-features = false, features = ["const_new", "serde", "union"] }
spki = { version = "0.7", default-features = false, features = ["pem", "std"] }
sqlx-core = { version = "0.8", features = ["_rt-tokio", "_tls-rustls-ring-webpki", "any", "chrono", "json", "migrate", "offline", "rust_decimal", "uuid"] }
sqlx-postgres = { version = "0.8", default-features = false, features = ["any", "chrono", "json", "migrate", "offline", "rust_decimal", "uuid"] }
standback = { version = "0.2", default-features = false, features = ["std"] }
subtle = { version = "2", default-features = false, features = ["i128"] }
thiserror = { version = "2" }
time = { version = "0.3", features = ["formatting", "macros", "parsing", "serde"] }
tokio = { version = "1", features = ["fs", "io-std", "io-util", "macros", "net", "parking_lot", "rt-multi-thread", "sync", "time"] }
tokio-stream = { version = "0.1", features = ["fs", "net", "sync"] }
tokio-util = { version = "0.7", features = ["codec", "compat", "io"] }
tonic = { version = "0.13" }
tower = { version = "0.5", default-features = false, features = ["balance", "buffer", "limit", "log"] }
tracing = { version = "0.1", features = ["log"] }
tracing-core = { version = "0.1" }
tracing-opentelemetry = { version = "0.31" }
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
uuid = { version = "1", features = ["serde", "v4", "v7"] }
zeroize = { version = "1" }

[build-dependencies]
base64 = { version = "0.22" }
byteorder = { version = "1", default-features = false, features = ["std"] }
bytes = { version = "1", features = ["serde"] }
chrono = { version = "0.4", features = ["serde"] }
crypto-common = { version = "0.1", default-features = false, features = ["getrandom", "std"] }
digest = { version = "0.10", features = ["mac", "oid", "std"] }
either = { version = "1", features = ["serde", "use_std"] }
es-entity-macros = { version = "0.9", default-features = false, features = ["event-context", "graphql"] }
fixedbitset = { version = "0.4" }
form_urlencoded = { version = "1" }
futures-channel = { version = "0.3", features = ["sink"] }
futures-core = { version = "0.3" }
futures-io = { version = "0.3" }
futures-sink = { version = "0.3" }
futures-task = { version = "0.3" }
futures-util = { version = "0.3", features = ["channel", "io", "sink"] }
generic-array = { version = "0.14", default-features = false, features = ["more_lengths", "zeroize"] }
getrandom = { version = "0.2", default-features = false, features = ["std"] }
hmac = { version = "0.12", default-features = false, features = ["reset"] }
idna = { version = "1" }
indexmap = { version = "2", features = ["serde"] }
lalrpop-util = { version = "0.20", features = ["lexer"] }
log = { version = "0.4", default-features = false, features = ["std"] }
memchr = { version = "2" }
num-traits = { version = "0.2", features = ["i128"] }
once_cell = { version = "1", features = ["portable-atomic"] }
percent-encoding = { version = "2" }
petgraph = { version = "0.6" }
prost = { version = "0.13", features = ["prost-derive"] }
rand_core = { version = "0.6", default-features = false, features = ["std"] }
regex-automata = { version = "0.4", default-features = false, features = ["dfa-build", "dfa-onepass", "hybrid", "meta", "nfa-backtrack", "perf", "std", "unicode"] }
regex-syntax = { version = "0.8" }
rust_decimal = { version = "1", features = ["maths"] }
rustls = { version = "0.23", default-features = false, features = ["logging", "ring", "std", "tls12"] }
serde = { version = "1", features = ["alloc", "derive", "rc"] }
serde_core = { version = "1", features = ["alloc", "rc"] }
serde_json = { version = "1", features = ["alloc", "raw_value", "unbounded_depth"] }
sha2 = { version = "0.10" }
smallvec = { version = "1", default-features = false, features = ["const_new", "serde", "union"] }
sqlx-core = { version = "0.8", features = ["_rt-tokio", "_tls-rustls-ring-webpki", "any", "chrono", "json", "migrate", "offline", "rust_decimal", "uuid"] }
sqlx-postgres = { version = "0.8", default-features = false, features = ["any", "chrono", "json", "migrate", "offline", "rust_decimal", "uuid"] }
standback = { version = "0.2", default-features = false, features = ["std"] }
subtle = { version = "2", default-features = false, features = ["i128"] }
syn = { version = "2", features = ["extra-traits", "fold", "full", "visit", "visit-mut"] }
thiserror = { version = "2" }
time-macros = { version = "0.2", default-features = false, features = ["formatting", "parsing", "serde"] }
tiny-keccak = { version = "2", features = ["sha3", "shake"] }
tokio = { version = "1", features = ["fs", "io-std", "io-util", "macros", "net", "parking_lot", "rt-multi-thread", "sync", "time"] }
tokio-stream = { version = "0.1", features = ["fs", "net", "sync"] }
tokio-util = { version = "0.7", features = ["codec", "compat", "io"] }
tracing = { version = "0.1", features = ["log"] }
tracing-core = { version = "0.1" }
uuid = { version = "1", features = ["serde", "v4", "v7"] }
zeroize = { version = "1" }

### END HAKARI SECTION

[package.metadata.cargo-machete]
ignored = [
    "ahash",
    "async-graphql",
    "axum",
    "axum-core",
    "base16ct",
    "base64",
    "byteorder",
    "bytes",
    "cala-ledger",
    "cala-ledger-core-types",
    "chrono",
    "cipher",
    "clap",
    "clap_builder",
    "crypto-common",
    "der",
    "deranged",
    "digest",
    "ecdsa",
    "either",
    "elliptic-curve",
    "es-entity",
    "ff",
    "fixedbitset",
    "form_urlencoded",
    "futures",
    "futures-channel",
    "futures-core",
    "futures-io",
    "futures-sink",
    "futures-task",
    "futures-util",
    "generic-array",
    "getrandom",
    "group",
    "hashbrown-3575ec1268b04181",
    "hashbrown-582f2526e08bb6a0",
    "hmac",
    "hyper",
    "hyper-util",
    "idna",
    "indexmap",
    "inout",
    "job",
    "lalrpop-util",
    "log",
    "memchr",
    "num-traits",
    "once_cell",
    "opentelemetry-http",
    "opentelemetry-otlp",
    "opentelemetry_sdk",
    "percent-encoding",
    "petgraph",
    "pkcs8",
    "prost",
    "rand",
    "rand_core",
    "regex-automata",
    "regex-syntax",
    "reqwest",
    "rust_decimal",
    "rustls",
    "schemars",
    "sec1",
    "serde",
    "serde_core",
    "serde_json",
    "serde_with",
    "sha2",
    "signature",
    "smallvec",
    "spki",
    "sqlx-core",
    "sqlx-postgres",
    "standback",
    "subtle",
    "thiserror",
    "time",
    "tokio",
    "tokio-stream",
    "tokio-util",
    "toml_datetime",
    "toml_edit",
    "tonic",
    "tower",
    "tracing",
    "tracing-core",
    "tracing-opentelemetry",
    "tracing-subscriber",
    "url",
    "uuid",
    "zeroize",
]
